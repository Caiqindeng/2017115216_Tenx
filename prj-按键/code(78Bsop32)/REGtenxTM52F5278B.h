/*
******************************************************************************************************
Name		:TM52F5274_78.h
Version		:V1.0
Author		:
Date		:2014.04.15
******************************************************************************************************
*/
#ifndef __TM52F5278_H__
#define __TM52F5278_H__
/*
******************************************************************************************************
BYTE Registers
******************************************************************************************************
*/
sfr 	P0    		= 0x80;			//Port 0 data
	//--------------------------------------------------------------------------------------------
	sbit 		P0_7		= P0^7;
	sbit 		P0_6		= P0^6;
	sbit 		P0_5		= P0^5;
	sbit 		P0_4		= P0^4;
	sbit 		P0_3		= P0^3;F
	sbit 		P0_2		= P0^2;
	sbit 		P0_1		= P0^1;
	sbit 		P0_0		= P0^0;
/*
******************************************************************************************************
*/
sfr 	SP   		= 0x81;			//Stack Point
/*
******************************************************************************************************
*/
sfr 	DPL   		= 0x82;			//Data Point Low byte
sfr 	DPH   		= 0x83;   		//Data Point High byte
/*
******************************************************************************************************
*/
sfr 	PCON  		= 0x87;			//锟斤拷支锟斤拷位锟斤拷锟斤拷,锟矫讹拷锟斤拷写锟斤拷式
	//--------------------------------------------------------------------------------------------
	#define 	SMOD	0x80		//PCON Bit[7],1=锟斤拷锟斤拷锟绞憋拷锟斤拷
	//--------------------------------------------------------------------------------------------
	#define 	GF1		0x08		//PCON Bit[3],锟矫伙拷锟斤拷锟斤拷锟斤拷锟绞癸拷锟�
	#define 	GF0		0x04		//PCON Bit[2],锟矫伙拷锟斤拷锟斤拷锟斤拷锟绞癸拷锟�
	//--------------------------------------------------------------------------------------------
	#define 	PD		0x02		//PCON Bit[1],锟斤拷位锟斤拷1,芯片锟斤拷锟斤拷stop模式
	//--------------------------------------------------------------------------------------------
	#define 	IDL		0x01		//PCON Bit[0],锟斤拷位锟斤拷1,芯片锟斤拷锟斤拷IDL模式
/*
******************************************************************************************************
*/
sfr 	TCON  		= 0x88;
	//--------------------------------------------------------------------------------------------
	sbit 		TF1 		= TCON^7;	//锟斤拷时锟斤拷T1锟斤拷锟斤拷锟街�,锟斤拷锟缴筹拷锟斤拷锟窖拷锟斤拷锟斤拷锟�,TF1也锟斤拷锟叫讹拷锟斤拷锟斤拷源,锟斤拷CPU锟斤拷应T1锟叫讹拷时锟斤拷硬锟斤拷锟斤拷锟斤拷
	sbit 		TR1 		= TCON^6;	//T1锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷位,为1时锟斤拷锟斤拷T1锟斤拷锟斤拷
	//--------------------------------------------------------------------------------------------
	sbit 		TF0 		= TCON^5;	//锟斤拷时锟斤拷T0锟斤拷锟斤拷锟街�,锟斤拷锟缴筹拷锟斤拷锟窖拷锟斤拷锟斤拷锟�,TF0也锟斤拷锟叫讹拷锟斤拷锟斤拷源,锟斤拷CPU锟斤拷应T0锟叫讹拷时锟斤拷硬锟斤拷锟斤拷锟斤拷
	sbit 		TR0			= TCON^4;	//T0锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷位,为1时锟斤拷锟斤拷T0锟斤拷锟斤拷
	//--------------------------------------------------------------------------------------------
	sbit 		IE1 		= TCON^3;	//锟解部锟叫讹拷1锟斤拷示源(INT1,P3.3)锟斤拷志;IE1也锟斤拷锟叫讹拷锟斤拷锟斤拷源,锟斤拷CPU锟斤拷应锟斤拷锟叫讹拷时锟斤拷硬锟斤拷锟斤拷IE1(锟斤拷锟截达拷锟斤拷锟斤拷式)
	sbit 		IT1 		= TCON^2;	//锟解部锟叫讹拷源1锟斤拷锟斤拷锟斤拷式锟斤拷锟斤拷位,IT1锟斤拷0,锟解部锟叫讹拷1锟教匡拷为锟斤拷平锟斤拷锟斤拷锟斤拷式;锟斤拷INT1锟斤拷P3.3锟斤拷锟斤拷锟斤拷偷锟狡绞�,锟斤拷位IE1
	//--------------------------------------------------------------------------------------------
	sbit 		IE0 		= TCON^1;	//锟解部锟叫讹拷0锟斤拷示源(INT1,P3.2)锟斤拷志;IE0也锟斤拷锟叫讹拷锟斤拷锟斤拷源,锟斤拷CPU锟斤拷应锟斤拷锟叫讹拷时锟斤拷硬锟斤拷锟斤拷IE0(锟斤拷锟截达拷锟斤拷锟斤拷式)
	sbit 		IT0 		= TCON^0;	//锟解部锟叫讹拷源0锟斤拷锟斤拷锟斤拷式锟斤拷锟斤拷位,IT0锟斤拷0,锟解部锟叫讹拷0锟教匡拷为锟斤拷平锟斤拷锟斤拷锟斤拷式;锟斤拷INT0锟斤拷P3.2锟斤拷锟斤拷锟斤拷偷锟狡绞�,锟斤拷位IE0
/*
******************************************************************************************************
*/
sfr 	TMOD  		= 0x89;				//锟斤拷支锟斤拷位锟斤拷锟斤拷,锟矫讹拷锟斤拷写锟斤拷式
	//--------------------------------------------------------------------------------------------
	#define 	T1_Mask		~0xf0		//T1锟斤拷锟斤拷模式选锟斤拷Mask
	//--------------------------------------------------------------------------------------------
	#define 	GATE1		0x80		//锟斤拷时锟斤拷1锟斤拷锟斤拷锟斤拷锟截匡拷锟斤拷位
					 	 				//锟斤拷GATE1=1时,INT1锟斤拷锟斤拷为锟竭碉拷平,同时TCON锟叫碉拷TR1锟斤拷锟斤拷位为1时,锟斤拷时/锟斤拷锟斤拷锟斤拷1锟脚匡拷始锟斤拷锟斤拷
					 	 				//锟斤拷GATE1=0时,锟斤拷只要锟斤拷TR1锟斤拷锟斤拷位锟斤拷为1锟斤拷锟斤拷时/锟斤拷锟斤拷锟斤拷1锟酵匡拷始锟斤拷锟斤拷
	#define 	CT1			0x40		//锟斤拷时/锟斤拷锟斤拷锟斤拷1锟斤拷锟杰碉拷选锟斤拷位
					 	 				//CT1=1为锟斤拷锟斤拷锟斤拷,通锟斤拷锟解部锟斤拷锟斤拷T1锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟�
					 	 				//CT1=0为锟斤拷时锟斤拷,锟斤拷锟节诧拷系统时锟斤拷锟结供锟斤拷时锟斤拷锟斤拷锟斤拷锟斤拷
	//--------------------------------------------------------------------------------------------
	#define 	T1_Mode0		0x00		//T1为13位锟斤拷时/锟斤拷锟斤拷锟斤拷
	#define 	T1_Mode1		0x10		//T1为16位锟斤拷时/锟斤拷锟斤拷锟斤拷
	#define 	T1_Mode2		0x20		//T1为8位锟皆讹拷锟斤拷锟截硷拷锟斤拷/锟斤拷时锟斤拷 
	#define 	T1_Mode3		0x30		//timer stop
	//--------------------------------------------------------------------------------------------
	#define 	T0_Mask			~0x0f		//T0锟斤拷锟斤拷模式选锟斤拷Mask
	//--------------------------------------------------------------------------------------------
	#define 	GATE0			0x08		//锟斤拷时锟斤拷0锟斤拷锟斤拷锟斤拷锟截匡拷锟斤拷位
					 	 				//锟斤拷GATE0=1时,INT0锟斤拷锟斤拷为锟竭碉拷平,同时TCON锟叫碉拷TR0锟斤拷锟斤拷位为1时,锟斤拷时/锟斤拷锟斤拷锟斤拷0锟脚匡拷始锟斤拷锟斤拷
					 	 				//锟斤拷GATE0=0时,锟斤拷只要锟斤拷TR0锟斤拷锟斤拷位锟斤拷为1锟斤拷锟斤拷时/锟斤拷锟斤拷锟斤拷0锟酵匡拷始锟斤拷锟斤拷
	#define 	CT0				0x04		//锟斤拷时/锟斤拷锟斤拷锟斤拷0锟斤拷锟杰碉拷选锟斤拷位
					 	 				//CT0=1为锟斤拷锟斤拷锟斤拷,通锟斤拷锟解部锟斤拷锟斤拷T0锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟�
					 	 				//CT0=0为锟斤拷时锟斤拷,锟斤拷锟节诧拷系统时锟斤拷锟结供锟斤拷时锟斤拷锟斤拷锟斤拷锟斤拷
	//--------------------------------------------------------------------------------------------
	#define 	T0_Mode0			0x00		//T0为13位锟斤拷时/锟斤拷锟斤拷锟斤拷 
	#define 	T0_Mode1			0x01		//T0为16位锟斤拷时/锟斤拷锟斤拷锟斤拷 
	#define 	T0_Mode2			0x02		//T0为8位锟皆讹拷锟斤拷锟截硷拷锟斤拷/锟斤拷时锟斤拷
	#define 	T0_Mode3			0x03		//锟斤拷锟斤拷锟斤拷锟斤拷T0,T0锟斤拷为锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷8位锟斤拷时锟斤拷/锟斤拷锟斤拷锟斤拷TH0锟斤拷TL0,锟节达拷模式锟斤拷T1停止锟斤拷锟斤拷
/*
******************************************************************************************************
*/	
sfr 	TL0   		= 0x8A;				//Timer 0 data low byte
sfr 	TH0   		= 0x8C;				//Timer 0 data high byte
/*
******************************************************************************************************
*/
sfr 	TL1   		= 0x8B;				//Timer 1 data low byte
sfr 	TH1   		= 0x8D;			  //Timer 1 data high byte
/*
******************************************************************************************************
*/
sfr 	P1    		= 0x90;				//Port 1 data
	//--------------------------------------------------------------------------------------------
	sbit 		P1_7		= P1^7;
	sbit 		P1_6		= P1^6;	
	sbit 		P1_5		= P1^5;	
	sbit 		P1_4		= P1^4;	
	sbit 		P1_3		= P1^3;	
	sbit 		P1_2		= P1^2;	
	sbit 		P1_1		= P1^1;	
	sbit 		P1_0		= P1^0;	
/*
******************************************************************************************************
*/
sfr		P0OE		= 0x91;				//P0 CMOS Push-Pull Output Enable (1=Enable)
/*
******************************************************************************************************
*/
sfr		P2MOD		= 0x93;				//P2 CMOS Push-Pull Output Enable (1=Enable)
  #define    P2OE5    0x80  //p2.5 CMOS Push-Pull Output Enable 
  #define    P2OE4    0x40  //p2.4 CMOS Push-Pull Output Enable 
  #define    P2OE3    0x20  //p2.3 CMOS Push-Pull Output Enable 
  #define    P2OE2    0x10  //p2.2 CMOS Push-Pull Output Enable 
	//--------------------------------------------------------------------------------------------
	//P2MOD1:P2MOD Bit[3:2],P2.1 Pin Mode Control
	#define		P21MOD_Mask		~0x0c
	#define		P21MOD_0		0x00
	#define		P21MOD_1		0x04
	#define		P21MOD_2		0x08
	#define		P21MOD_3		0x0C
	//--------------------------------------------------------------------------------------------
	//P2MOD0:P2MOD Bit[1:0],P2.0 Pin Mode Control
	#define		P20MOD_Mask		~0x03
	#define		P20MOD_0		0x00
	#define		P20MOD_1		0x01
	#define		P20MOD_2		0x02
	#define		P20MOD_3		0x03
/*
******************************************************************************************************
*/
sfr 	OPTION    	= 0x94;
	//--------------------------------------------------------------------------------------------
	//--------------------------------------------------------------------------------------------
	//UARTIW:OPTION Bit[7],P3.1锟斤拷锟斤拷UART,1=One wire UART, both TXD/RXD use P3.1 pin
	//--------------------------------------------------------------------------------------------
	#define 	UART1W		0x80		//P3.1锟斤拷锟斤拷UART
	#define		MODE3V		0x40			//3V selection enable
	//--------------------------------------------------------------------------------------------
	//WDT:OPTION Bit[5:4],WDT Prescale.  
	#define		WDTPSC_1	  0x00	  //Watch Dog Timer Prescale 3=Fastest   
	#define		WDTPSC_2		0x10		//Watch Dog Timer Prescale 3=Fastest   
	#define		WDTPSC_3 		0x20		//Watch Dog Timer Prescale 3=Fastest   
	#define		WDTPSC_4 		0x30		//Watch Dog Timer Prescale 3=Fastest   
	//--------------------------------------------------------------------------------------------
	//ADCKS:OPTION Bit[3:2],ADC Clock Rate 
	#define		ADCKS_Mask			b'00001100'		//ADC Clock Rate Mask
	#define		ADCKS_sys_32	  0x00	    //Interrupt rate is 32768 system clock cycle
	#define		ADCKS_sys_16		0x04		//Interrupt rate is 16384 system clock cycle
	#define		ADCKS_sys_8 		0x08		// Interrupt rate is 8192 system clock cycle
	#define		ADCKS_sys_4 		0x0c		//Interrupt rate is 128 system clock cycle
	//--------------------------------------------------------------------------------------------
	//TM3PSC:OPTION Bit[1:0],Timer3 Interrupt rate control,Timer3 Intr. rate. 0/1/2/3=overflow/1sec/0.5sec/0.25sec
	#define		TM3_InterruptRateMask			b'00000011'		//TM3_InterruptRateMask
	#define		TM3_InterruptIsCountDataOverflow	0x00	    //Interrupt rate is 32768 Slow clock cycle
	#define		TM3_InterruptIs1SecondRate		0x01		//Interrupt rate is 16384 Slow clock cycle
	#define		TM3_InterruptIs1_2SecondRate		0x02		// Interrupt rate is 8192 Slow clock cycle
	#define		TM3_InterruptIs1_4SecondRate		0x03		//Interrupt rate is 128 Slow clock cycle
/*
******************************************************************************************************
*/
sfr 	INTFLAG    	= 0x95;
	//--------------------------------------------------------------------------------------------
	#define		LVD		0x80		//Low Voltage Detect Flag
	//--------------------------------------------------------------------------------------------
	#define		TKIF	0x20		//Touch Key 锟叫断憋拷志锟斤拷HW clear while TKSOC set
	//--------------------------------------------------------------------------------------------
	#define		ADIF	0x10		//ADC 锟叫断憋拷志锟斤拷HW clear while ADSOC set
	//--------------------------------------------------------------------------------------------
	#define		IE2		0x04		//INT2 锟叫断憋拷志锟斤拷1=锟解部锟叫讹拷2锟叫讹拷
	//--------------------------------------------------------------------------------------------
	#define 	P1IF	0x02		//P1锟剿匡拷锟叫断憋拷志锟斤拷1=P1锟剿匡拷锟叫讹拷
	//--------------------------------------------------------------------------------------------
	#define 	TF3		0x01		//TM3锟叫断憋拷志,1=TM3锟叫讹拷
/*
******************************************************************************************************
*/
sfr		P1WKUP		= 0x96;						//P1锟剿匡拷锟叫断伙拷锟斤拷锟斤拷锟矫ｏ拷Bit=1锟斤拷效
	#define		P1WKUP_Mask			~0xff	   	//P1锟剿匡拷锟叫断伙拷锟斤拷锟斤拷锟斤拷Mask
	#define		P1WKUP_AllEnable	0xff		//P1锟斤拷锟叫端匡拷锟叫断伙拷锟斤拷锟斤拷锟斤拷
	#define		P1WKUP_P10Enable	0x01		//P10锟剿匡拷锟叫断伙拷锟斤拷锟斤拷锟斤拷
	#define		P1WKUP_P11Enable	0x02		//P11锟剿匡拷锟叫断伙拷锟斤拷锟斤拷锟斤拷
	#define		P1WKUP_P12Enable	0x04		//P12锟剿匡拷锟叫断伙拷锟斤拷锟斤拷锟斤拷
	#define		P1WKUP_P13Enable	0x08		//P13锟剿匡拷锟叫断伙拷锟斤拷锟斤拷锟斤拷
	#define		P1WKUP_P14Enable	0x10		//P14锟剿匡拷锟叫断伙拷锟斤拷锟斤拷锟斤拷
	#define		P1WKUP_P15Enable	0x20		//P15锟剿匡拷锟叫断伙拷锟斤拷锟斤拷锟斤拷
	#define		P1WKUP_P16Enable	0x40		//P16锟剿匡拷锟叫断伙拷锟斤拷锟斤拷锟斤拷
	#define		P1WKUP_P17Enable	0x80		//P17锟剿匡拷锟叫断伙拷锟斤拷锟斤拷锟斤拷
/*
******************************************************************************************************
*/
sfr		SWCMD		= 0x97;
/*
******************************************************************************************************
*/
sfr 	SCON  		= 0x98;
	//--------------------------------------------------------------------------------------------
	sbit 		SM0 		= SCON^7;	//锟斤拷锟叫口癸拷锟斤拷锟斤拷式锟斤拷锟斤拷位 Bit[0]
	sbit 		SM1 		= SCON^6;	//锟斤拷锟叫口癸拷锟斤拷锟斤拷式锟斤拷锟斤拷位 Bit[1]
	#define		Uart_ModeMask	~0xC0	//锟斤拷锟斤拷模式Mask
	#define		Uart_Mode0		0x00	//00 锟斤拷式0锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷频锟斤拷锟斤拷锟斤拷:锟斤拷锟斤拷频锟斤拷/12
	#define		Uart_Mode1		0x40	//01 锟斤拷式1锟斤拷锟斤拷锟斤拷锟斤拷锟缴讹拷时锟斤拷T1锟斤拷T2锟斤拷锟斤拷锟斤拷屎锟絊MOD锟斤拷锟斤拷:2SMOD*(T1锟斤拷锟斤拷锟�)/32
	#define		Uart_Mode2		0x80	//10 锟斤拷式2锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷频锟绞猴拷SMOD锟斤拷锟斤拷:2SMOD*锟斤拷锟斤拷频锟斤拷/64
	#define		Uart_Mode3		0xc0	//11 锟斤拷式3锟斤拷锟斤拷锟斤拷锟斤拷锟缴讹拷时锟斤拷T1锟斤拷T2锟斤拷锟斤拷锟斤拷屎锟絊MOD锟斤拷锟斤拷:2SMOD*(T1锟斤拷锟斤拷锟�)/32
	
	//--------------------------------------------------------------------------------------------
	sbit 		SM2 		= SCON^5;	//锟斤拷锟酵拷趴锟斤拷锟轿�*/
										//锟斤拷锟酵拷锟斤拷枪锟斤拷锟斤拷诜锟绞�2锟酵凤拷式3锟斤拷SM2位锟斤拷要锟斤拷锟节凤拷式2锟酵凤拷式3锟斤拷锟斤拷状态
					 	 				//锟斤拷锟斤拷锟叫口癸拷锟斤拷锟节凤拷式2锟斤拷3:
					 	 				//锟斤拷SM2=1时,只锟叫碉拷锟斤拷锟秸碉拷锟斤拷9位锟斤拷锟斤拷(RB8)为1时,锟脚把斤拷锟秸碉拷锟斤拷前8位锟斤拷锟斤拷锟斤拷锟斤拷SBUF,锟斤拷锟斤拷位RI锟斤拷锟斤拷锟叫讹拷锟斤拷锟斤拷,锟斤拷锟斤拷峤拷锟斤拷盏锟斤拷锟斤拷锟斤拷莘锟斤拷锟�
					 	 				//锟斤拷SM2=0时,锟酵诧拷锟杰碉拷9位锟斤拷锟斤拷锟斤拷0锟斤拷锟斤拷1,锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷SBUF,锟斤拷锟斤拷锟斤拷锟叫讹拷锟斤拷锟斤拷,锟斤拷锟斤拷锟节凤拷式0时锟斤拷SM2锟斤拷锟斤拷为0
	//--------------------------------------------------------------------------------------------
	sbit 		REN 		= SCON^4;	//锟斤拷锟斤拷锟斤拷锟斤拷位:
					 	 				//REN锟斤拷锟节匡拷锟斤拷锟斤拷锟捷斤拷锟秸碉拷锟斤拷锟斤拷锟酵斤拷止,REN=1时,锟斤拷锟斤拷锟斤拷锟斤拷,REN=0时,锟斤拷止锟斤拷锟斤拷
	//--------------------------------------------------------------------------------------------
	sbit 		TB8 		= SCON^3;	//锟斤拷锟斤拷锟斤拷锟捷碉拷8位
	sbit 		RB8 		= SCON^2;	//锟斤拷锟斤拷锟斤拷锟捷碉拷8位
	//--------------------------------------------------------------------------------------------
	sbit 		TI 			= SCON^1;	//锟斤拷锟斤拷锟叫断憋拷志位锟斤拷
					 	 				//锟斤拷式0时,锟斤拷锟斤拷锟斤拷锟�8位锟斤拷锟捷猴拷,锟斤拷硬锟斤拷锟斤拷位
					 	 				//锟斤拷锟斤拷锟斤拷式锟斤拷,锟斤拷硬锟斤拷锟斤拷位,TI=1锟斤拷示帧锟斤拷锟酵斤拷锟斤拷,TI锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷
	//--------------------------------------------------------------------------------------------
	sbit 		RI 			= SCON^0;	//锟斤拷锟斤拷锟叫断憋拷志位锟斤拷
					 	 				//锟斤拷式0时,锟斤拷锟斤拷锟斤拷锟�8位锟斤拷锟捷猴拷,锟斤拷硬锟斤拷锟斤拷位
					 	 				//锟斤拷锟斤拷锟斤拷式锟斤拷,锟斤拷硬锟斤拷锟斤拷位,RI=1锟斤拷示帧锟斤拷锟斤拷锟斤拷锟�
/*
******************************************************************************************************
*/
sfr 	SBUF  		= 0x99;				//锟斤拷锟节伙拷锟斤拷拇锟斤拷锟�,UART transmit and receive data
/*
******************************************************************************************************
*/
sfr		PWM0PRD		= 0x9A;
/*
******************************************************************************************************
*/
sfr		PWM0DH		= 0x9B;
/*
******************************************************************************************************
*/
sfr		PWM1PRD		= 0x9C;
/*
******************************************************************************************************
*/
sfr		PWM1DH		= 0x9D;
/*
******************************************************************************************************
*/
sfr 	P2    		= 0xA0;			//Port 2 data
	//--------------------------------------------------------------------------------------------
	sbit 		P2_5		= P2^5;	
	sbit 		P2_4		= P2^4;	
	sbit 		P2_3		= P2^3;	
	sbit 		P2_2		= P2^2;	
	sbit 		P2_1		= P2^1;	
	sbit 		P2_0		= P2^0;							
/*
******************************************************************************************************
*/
sfr		PWMCON		= 0xA1;
	#define		PWM1CKS_Mask		~0xc0
	#define		PWM1CKS_1   		 0x00// PWM1 Clock source sysclk div4
	#define		PWM1CKS_2   		 0x40// PWM1 Clock source sysclk div2
	#define		PWM1CKS_3   		 0x80// PWM1 Clock source sysclk div1
	#define		PWM1CKS_4   		 0xc0// PWM1 FRC Double frequence
	#define		PWM1DL_Mask		  ~0x30
	#define		PWM0CKS_Mask		~0x0C
	#define		PWM0CKS_1   		 0x00// PWM0 Clock source sysclk div4
	#define		PWM0CKS_2   		 0x04// PWM0 Clock source sysclk div2
	#define		PWM0CKS_3   		 0x08// PWM0 Clock source sysclk div1
	#define		PWM0CKS_4   		 0x0C// PWM0 FRC Double frequence
	#define		PWM0DL_Mask		  ~0x03
/*
******************************************************************************************************
*/
sfr		P1MODL		= 0xA2;
	//--------------------------------------------------------------------------------------------
	//P1MOD3:P1MODL Bit[7:6],P1.3 Pin Mode Control
	#define		P13MOD_Mask		~0xc0
	#define		P13MOD_0		0x00
	#define		P13MOD_1		0x40
	#define		P13MOD_2		0x80
	#define		P13MOD_3		0xC0
	//--------------------------------------------------------------------------------------------
	//P1MOD2:P1MODL Bit[5:4],P1.2 Pin Mode Control
	#define		P12MOD_Mask		~0x30
	#define		P12MOD_0		0x00
	#define		P12MOD_1		0x10
	#define		P12MOD_2		0x20
	#define		P12MOD_3		0x30
	//--------------------------------------------------------------------------------------------
	//P1MOD1:P1MODL Bit[3:2],P1.1 Pin Mode Control
	#define		P11MOD_Mask		~0x0C
	#define		P11MOD_0		0x00
	#define		P11MOD_1		0x04
	#define		P11MOD_2		0x08
	#define		P11MOD_3		0x0C
	//--------------------------------------------------------------------------------------------
	//P1MOD0:P1MODL Bit[1:0],P1.0 Pin Mode Control
	#define		P10MOD_Mask		~0x03
	#define		P10MOD_0		0x00
	#define		P10MOD_1		0x01
	#define		P10MOD_2		0x02
	#define		P10MOD_3		0x03
/*
******************************************************************************************************
*/
sfr		P1MODH		= 0xA3;
	//--------------------------------------------------------------------------------------------
	//P1MOD7:P1MODH Bit[7:6],P1.7 Pin Mode Control
	#define		P17MOD_Mask		~0xc0
	#define		P17MOD_0		0x00
	#define		P17MOD_1		0x40
	#define		P17MOD_2		0x80
	#define		P17MOD_3		0xc0
	//--------------------------------------------------------------------------------------------
	//P1MOD6:P1MODH Bit[5:4],P1.6 Pin Mode Control
	#define		P16MOD_Mask		~0x30
	#define		P16MOD_0		0x00
	#define		P16MOD_1		0x10
	#define		P16MOD_2		0x20
	#define		P16MOD_3		0x30
	//--------------------------------------------------------------------------------------------
	//P1MOD5:P1MODH Bit[3:2],P1.5 Pin Mode Control
	#define		P15MOD_Mask		~0x0c
	#define		P15MOD_0		0x00
	#define		P15MOD_1		0x04
	#define		P15MOD_2		0x08
	#define		P15MOD_3		0x0c
	//--------------------------------------------------------------------------------------------
	//P1MOD4:P1MODH Bit[1:0],P1.4 Pin Mode Control
	#define		P14MOD_Mask		~0x03
	#define		P14MOD_0		0x00
	#define		P14MOD_1		0x01
	#define		P14MOD_2		0x02
	#define		P14MOD_3		0x03
/*
******************************************************************************************************
*/
sfr		P3MODL		= 0xA4;
	//--------------------------------------------------------------------------------------------
	//P3MOD3:P3MODL Bit[7:6],P3.3 Pin Mode Control
	#define		P33MOD_Mask		~0xc0
	#define		P33MOD_0		0x00
	#define		P33MOD_1		0x40
	#define		P33MOD_2		0x80
	#define		P33MOD_3		0xc0
	//--------------------------------------------------------------------------------------------
	//P3MOD2:P3MODL Bit[5:4],P3.2 Pin Mode Control
	#define		P32MOD_Mask		~0x30
	#define		P32MOD_0		0x00
	#define		P32MOD_1		0x10
	#define		P32MOD_2		0x20
	#define		P32MOD_3		0x30
	//--------------------------------------------------------------------------------------------
	//P3MOD1:P3MODL Bit[3:2],P3.1 Pin Mode Control
	#define		P31MOD_Mask		~0x0c
	#define		P31MOD_0		0x00
	#define		P31MOD_1		0x04
	#define		P31MOD_2		0x08
	#define		P31MOD_3		0x0c
	//--------------------------------------------------------------------------------------------
	//P3MOD0:P3MODL Bit[1:0],P3.0 Pin Mode Control
	#define		P30MOD_Mask		~0x03
	#define		P30MOD_0		0x00
	#define		P30MOD_1		0x01
	#define		P30MOD_2		0x02
	#define		P30MOD_3		0x03
/*
******************************************************************************************************
*/
sfr		P3MODH		= 0xA5;
	//--------------------------------------------------------------------------------------------
	//T0OE:P3MODH Bit[7],"Timer0 overflow divided by 64"signal output to P3.4 pin
	#define		T0OE    		0x80
	//--------------------------------------------------------------------------------------------
	//P3MOD6:P3MODH Bit[5:4],P3.6 Pin Mode Control
	#define		P36MOD_Mask		~0x30
	#define		P36MOD_0		0x00
	#define		P36MOD_1		0x10
	#define		P36MOD_2		0x20
	#define		P36MOD_3		0x30
	//--------------------------------------------------------------------------------------------
	//P3MOD5:P3MODH Bit[3:2],P3.5 Pin Mode Control
	#define		P35MOD_Mask		~0x0c
	#define		P35MOD_0		0x00
	#define		P35MOD_1		0x04
	#define		P35MOD_2		0x08
	#define		P35MOD_3		0x0c
	//--------------------------------------------------------------------------------------------
	//P3MOD4:P3MODH Bit[1:0],P3.4 Pin Mode Control
	#define		P34MOD_Mask		~0x03
	#define		P34MOD_0		0x00
	#define		P34MOD_1		0x01
	#define		P34MOD_2		0x02
	#define		P34MOD_3		0x03
/*
******************************************************************************************************
*/
sfr 	PINMOD  		= 0xA6;
	#define		PWM1AOE		0x80//Set to enable PWM1A and signal output to P1.3 pin
	#define		PWM1BOE		0x40//Set to enable PWM1B and signal output to P2.3 pin
	#define		PWM0AOE		0x20//Set to enable PWM0A and signal output to P1.2 pin
	#define		PWM0BOE		0x10//Set to enable PWM0B and signal output to P2.2 pin
	#define		TCOE  		0x08//Set to output instruction cycle clock signal to P1.4 pin
	#define		T2OE		  0x04//Set to output "Timer2 overflow divided by 2" signal to P1.0 pin
/*
******************************************************************************************************
*/
sfr 	IE    		= 0xA8;
	//--------------------------------------------------------------------------------------------
	sbit 		EA 			= IE^7;		//EA=0时,锟斤拷锟斤拷锟叫断斤拷止;EA=1时,锟斤拷锟叫断的诧拷锟斤拷锟缴革拷锟斤拷锟斤拷锟斤拷锟轿伙拷锟斤拷锟�
	sbit		ET2			= IE^5;		//锟斤拷时2锟叫讹拷锟斤拷锟斤拷
	sbit 		ES 			= IE^4;		//锟斤拷锟叫匡拷锟叫断筹拷锟斤拷(ES=1锟斤拷锟斤拷,ES=0锟斤拷止)
	sbit 		ET1 		= IE^3;		//锟斤拷时1锟叫断筹拷锟斤拷
	sbit 		EX1 		= IE^2;		//锟斤拷锟叫讹拷INT1锟叫断筹拷锟斤拷
	sbit 		ET0 		= IE^1;		//锟斤拷时锟斤拷0锟叫断筹拷锟斤拷
	sbit 		EX0 		= IE^0;		//锟解部锟叫讹拷INT0锟斤拷锟叫讹拷锟斤拷锟斤拷
/*
******************************************************************************************************
*/
sfr		INTE1		= 0xA9;
    //-------------------------------------------------------------------------------------------------------
	//IAP写使锟斤拷-->INTE1=(INTE1&~IAPWE_Mask)|IAPWE_En;(锟斤拷锟斤拷写锟斤拷要)
	//IAP写锟斤拷止-->INTE1=(INTE1&~IAPWE_Mask)|IAPWE_Dis;
	
	#define 	IAPWE_Mask	0xE0
	#define 	IAPWE_En	0xA0
	#define 	IAPWE_Dis	0x00
	//--------------------------------------------------------------------------------------------
	#define		SPIE		0x10		//SPI 锟叫讹拷锟斤拷锟斤拷
	//--------------------------------------------------------------------------------------------
	#define		ADTKIE  0x08		//ADC/Touch Key  锟叫讹拷锟斤拷锟斤拷
	//--------------------------------------------------------------------------------------------
	//--------------------------------------------------------------------------------------------
	#define		EX2			0x04		//INT2 锟叫讹拷锟斤拷锟斤拷锟斤拷Stop Mode 锟斤拷锟窖癸拷锟斤拷锟斤拷锟斤拷
	//--------------------------------------------------------------------------------------------
	#define	  P1IE		0x02		//P1锟剿匡拷锟叫讹拷锟斤拷锟斤拷
	//--------------------------------------------------------------------------------------------
	#define		TM3IE		0x01		//TM3锟叫讹拷锟斤拷锟斤拷		
/*
******************************************************************************************************
*/
sfr		ADTKDT		= 0xAA;
	//--------------------------------------------------------------------------------------------
	//ADCDL:ADTKDT Bit[7:4],ADC Data LSB 3~0
	#define		TKEOC		0x08		//Touch Key End of Conversion
	#define		TKOVF		0x04		//Touch Key Counter Overflow
	//--------------------------------------------------------------------------------------------
	//TKDH:ADTKDT Bit[1:0],Touch Key Data MSB 9~8
/*
******************************************************************************************************
*/
sfr		ADCDH		= 0xAB;//ADC Data 11~4
/*
******************************************************************************************************
*/
sfr		TKDL		= 0xAC;//Touch Key Counter Data 7~0
/*
******************************************************************************************************
*/
sfr		TKCON		= 0xAD;
	//--------------------------------------------------------------------------------------------
	//TKPD:TKCON Bit[7],Touch Key Power Down
	#define		TKPD		0x80		//0: Touch Key Running ;1: Touch Key Power Down
	//--------------------------------------------------------------------------------------------
	//TKTMR:TKCON Bit[2:0],Touch Key Conversion Time
	#define		TKTMR_Mask		 ~0x07		//TKTMR_Mask
	#define		TKTMR_short    0x00		  //shortest
//...
	#define		TKTMR_long     0x07		  //longest
/*
******************************************************************************************************
*/
sfr		CHSEL		= 0xAE;//Touch Key Counter Data 7~0
	//--------------------------------------------------------------------------------------------
	//ADCHS:CHSEL Bit[7:4],ADC Channel Select
                 //0000: AD0 (P3.3)
                 //0001: AD1 (P3.2)
                 //0010: AD2 (P3.1)
                 //0011: AD3 (P3.0)
                 //0100: AD4 (P1.0)
                 //0101: AD5 (P1.1)
                 //0110: AD6 (P1.2)
                 //0111: AD7 (P1.3)
                 //1000: AD8 (P1.4)
                 //1001: AD9 (P1.5)
                 //1010: VSS
                 //1011: VBG (Internal Reference Voltage)
                 //11xx: Reserved	
	//--------------------------------------------------------------------------------------------
	//TKCHS:TKCON Bit[3:0],Touch Key Channel Select
                 //0000: TK0 (P1.0)
                 //0001: TK1 (P1.1)
                 //0010: TK2 (P1.2)
                 //0011: TK3 (P1.3)
                 //0100: TK4 (P3.3)
                 //0101: TK5 (P3.2)
                 //0110: TK6 (P2.1)
                 //0111: TK7 (P3.0)
                 //1000: TK8 (P1.4)
                 //1001: TK9 (P1.6)
                 //1010: TK10 (P1.7)
                 //1011: TK11 (P3.6)
                 //1100: TK12 (P3.4)
                 //1101: TK13 (P3.5)
                 //1111: Reserved
/*
******************************************************************************************************
*/
sfr		TKCON2		= 0xAF;
	//ATKDT:TKCON2 Bit[7:4],Auto Touch Key Scan Result
	//--------------------------------------------------------------------------------------------
	//TKAUTO:TKCON2 Bit[3],Touch Key Auto Scan Mode Enable
	#define		TKAUTO		0x08		//0: Touch Key Running ;1: Touch Key Power Down
	//--------------------------------------------------------------------------------------------
	//TKSCNRT:TKCON2 Bit[2],Touch Key Auto Scan Rate ,0=125mS,1=62mS
	#define		TKSCNRT		0x04		//0=125mS,1=62mS
	//--------------------------------------------------------------------------------------------
	//TKSCNUM:TKCON2 Bit[1:0],Touch Key Auto Scan Number
	#define		TKSCNUM1	0x00		//1 channel
	#define		TKSCNUM4	0x03		//4 channel
/*
******************************************************************************************************
*/
sfr 	P3    		= 0xB0;				//Port 3 data
	//--------------------------------------------------------------------------------------------
	sbit 		P3_7		= P3^7;
	sbit 		P3_6		= P3^6;
	sbit 		P3_5		= P3^5;
	sbit 		P3_4		= P3^4;
	sbit 		P3_3		= P3^3;
	sbit 		P3_2		= P3^2;
	sbit 		P3_1		= P3^1;
	sbit 		P3_0		= P3^0;
/*
******************************************************************************************************
*/
sfr 	LCDCON  	= 0xB1;  //LCD Bias: 锟教讹拷 1/3 bias,
	//--------------------------------------------------------------------------------------------
	#define 	LCDON			0x80		//1=锟斤拷锟斤拷LCD锟斤拷锟杰ｏ拷0: Disable;1: LCD Enable
	//--------------------------------------------------------------------------------------------
	//LCDDUTY:LCDCON Bit[6],LCD/LED Duty
	#define		LCDDUTY_3   	0x00	  //1/3 duty
	#define		LCDDUTY_4   	0x40		//1/4 duty
	//--------------------------------------------------------------------------------------------
	//LCDBRIT:LCDCON Bit[2:0],LCD Brightness
	#define		LCDBRIT_Mask			0x07  	//LCDBRIT_Mask
	#define		LCDBRIT_Dark	    0x00		//Most darkness
//... 
  #define		LCDBRIT_Bright		0x07		//Most brightness
/*
******************************************************************************************************
*/
sfr 	LCDCON2  	= 0xB2;
	//--------------------------------------------------------------------------------------------
	#define 	LCDCKS			0x80		//LCD时锟斤拷源锟斤拷LCD Clock Source, 1=SXT Clock, 0=SIRC
	//--------------------------------------------------------------------------------------------
	//LCDPSC:LCDCON2 Bit[6:5], LCD/LED Clock divided by
	#define		LCDPSC_Mask	~0x70		//
	#define		LCDPSC_256  0x00		//256
	#define		LCDPSC_128  0x20 	  //128
	#define		LCDPSC_64   0x40	  //64
	#define		LCDPSC_32   0x60		//32
	//--------------------------------------------------------------------------------------------
	#define		SELLED			0x10	    //0: LCD mode;1: LED mode
	//--------------------------------------------------------------------------------------------
	#define		LEDPOL			0x08	    //0: active low (with high sink);1: active high
	//--------------------------------------------------------------------------------------------
	#define		LEDDTE			0x04	    //0: Dead time disable;1: Dead time enable
/*
******************************************************************************************************
*/
sfr   LCDPIN    = 0xB3;
	#define		LCDPIN_Mask	~0xFF		//
	#define		LCDPIN_7    0x80		//P3.2 mode;0: I/O mode;1: LCD/LED SEG17
	#define		LCDPIN_6    0x40 	  //P3.1 mode;0: I/O mode;1: LCD/LED SEG16
	#define		LCDPIN_5    0x20	  //P3.0 mode;0: I/O mode;1: LCD/LED SEG15
	#define		LCDPIN_4    0x10		//P1.0 mode;0: I/O mode;1: LCD/LED SEG14
	#define		LCDPIN_3    0x08		//P1.1 mode;0: I/O mode;1: LCD/LED SEG13
	#define		LCDPIN_2    0x04 	  //P1.2 mode;0: I/O mode;1: LCD/LED SEG12
	#define		LCDPIN_1    0x02	  //P1.6~P1.3 mode;0: I/O mode;1: LCD/LED SEG8~SEG11
	#define		LCDPIN_0    0x01		//P3.4~P3.6,P1.7 mode;0: I/O mode;1: LCD/LED SEG4~7
/*
******************************************************************************************************
*/
sfr 	IP    		= 0xB8;
	//--------------------------------------------------------------------------------------------
	sbit		PT2			  = IP^5;		//锟斤拷时2锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
	sbit 		PS			  = IP^4;		//锟斤拷锟叫匡拷锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
	sbit 		PT1	    	= IP^3;		//锟斤拷时1锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
	sbit 		PX1	    	= IP^2;		//锟斤拷锟叫讹拷INT1锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
	sbit 		PT0	    	= IP^1;		//锟斤拷时0锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
	sbit 		PX0	    	= IP^0;		//锟斤拷锟叫讹拷INT0锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
/*
******************************************************************************************************
*/
sfr 	IPH    		= 0xB9;
	//--------------------------------------------------------------------------------------------
//	sbit		PT2H		  = IP^5;		//锟斤拷时2锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
//	sbit 		PSH			  = IP^4;		//锟斤拷锟叫匡拷锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
//	sbit 		PT1H	    = IP^3;		//锟斤拷时1锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
//	sbit 		PX1H	    = IP^2;		//锟斤拷锟叫讹拷INT1锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
//	sbit 		PT0H	    = IP^1;		//锟斤拷时0锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
//	sbit 		PX0H	    = IP^0;		//锟斤拷锟叫讹拷INT0锟叫讹拷锟斤拷锟饺硷拷锟斤拷位/*
	#define		IPH_Mask	  ~0x3F		//
	#define		IPH_PT2H    0x20		//锟斤拷时2锟叫讹拷锟斤拷锟饺硷拷锟斤拷位       
	#define		IPH_PSH     0x10 	  //锟斤拷锟叫匡拷锟叫讹拷锟斤拷锟饺硷拷锟斤拷位      
	#define		IPH_PT1H    0x08	  //锟斤拷时1锟叫讹拷锟斤拷锟饺硷拷锟斤拷位       
	#define		IPH_PX1H    0x04		//锟斤拷锟叫讹拷INT1锟叫讹拷锟斤拷锟饺硷拷锟斤拷位  
	#define		IPH_PT0H    0x02		//锟斤拷时0锟叫讹拷锟斤拷锟饺硷拷锟斤拷位       
	#define		IPH_PX0H    0x01 	  //锟斤拷锟叫讹拷INT0锟叫讹拷锟斤拷锟饺硷拷锟斤拷位/*
/*
******************************************************************************************************
*/	
sfr 	IP1  		= 0xBA;
	//--------------------------------------------------------------------------------------------
	#define		PSPI		0x10		//SPI锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
	#define 	PADTKI	0x08;		//ADC/Touch Key 锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
	#define		PX2			0x04		//XIN T2锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
	#define 	PP1			0x02;		//P1锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
	#define		PT3			0x01;		//锟斤拷时3锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
/*
******************************************************************************************************
*/
sfr 	IP1H   		= 0xBB;
	//--------------------------------------------------------------------------------------------
	#define		PSPIH 	0x10		//SPI锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
	#define 	PADTKIH	0x08;		//ADC/Touch Key 锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
	#define		PX2H		0x04		//XIN T2锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
	#define 	PP1H		0x02;		//P1锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
	#define 	PT3H    0x01;		//锟斤拷时3锟叫讹拷锟斤拷锟饺硷拷锟斤拷位
/*
******************************************************************************************************
*/
sfr   SPCON     = 0xBC;
	#define		SPCON_Mask	~0xFF		//
	#define		SPEN    0x80		//SPI Enable.0: SPI Enable;1: SPI Disable
	#define		MSTR    0x40 	  //Master Mode Enable.0: Slave Mode;1: Master Mode
	#define		CPOL    0x20	  //SPI Clock Polarity.0: SCK is low in idle state;1: SCK is high in idle state
	#define		CPHA    0x10		//SPI Clock Phase.0: Data sampled on first edge of SCK period;1: Data sampled on second edge of SCK period
	#define		SSDIS   0x08		//Pin Disable.0: Enable   pin;1: Disable   pin
	#define		LSBF    0x04 	  //LSB First.0: MSB first;1: LSB first
	//--------------------------------------------------------------------------------------------
	//SPCR:SPCON Bit[1:0], SPI Clock Rate.
	#define		SPCR_2  0x00	  //FSYSCLK/2
	#define		SPCR_4  0x01	  //FSYSCLK/4
	#define		SPCR_8  0x02	  //FSYSCLK/8
	#define		SPCR_16 0x03	  //FSYSCLK/16
/*
******************************************************************************************************
*/
sfr   SPSTA     = 0xBD;
	#define		SPSTA_Mask	~0xFC		//
	#define		SPIF    0x80		//SPI Interrupt Flag,This bit is set by H/W at the end of a data transfer,Cleared by H/W when interrupt is vectored into
	#define		WCOL    0x40 	  //Write Collision Interrupt Flag,This bit is set by H/W if write data to SPDAT when SPBSY is set.Write 0 to this bit or rewrite data to SPDAT when SPBYS is cleared will clear this flag.
	#define		MODF    0x20	  //Mode Fault Interrupt Flag,This bit is set by H/W when SSDIS is cleared and NSS pin is pulled low in Master mode.Write 0 to this bit will clear this flag.When this bit is set, the SPEN and MSTR in SPCON will be cleared by hardware
	#define		RCVOVF  0x10		//Receive Buffer Overrun Flag,This bit is set by H/W at the end of a data transfer and RCVBF is set.Write 0 to this bit or read SPDAT register will clear this flag.
	#define		RCVBF   0x08		//Receive Buffer Full Flag,This bit is set by H/W at the end of a data transfer.Write 0 to this bit or read SPDAT register will clear this flag.
	#define		SPBSY   0x04 	  //SPI Busy Flag (Read Only),This bit is set by H/W when a SPI transfer is progress.
/*
******************************************************************************************************
*/
sfr   SPDAT     = 0xBE;         //SPI Transmit and Receive Data
/*
******************************************************************************************************
*/
sfr   ATKCMP10H = 0xC2;         //
	//--------------------------------------------------------------------------------------------
	//ATKCMP1:ATKCMP10H Bit[6:4], Auto Touch Key Scan Channel 1 Compare Data bit 10~8.
	//--------------------------------------------------------------------------------------------
	//ATKCMP0:ATKCMP10H Bit[2:0], Auto Touch Key Scan Channel 0 Compare Data bit 10~8.
/*
******************************************************************************************************
*/
sfr   ATKCMP32H = 0xC3;         //
	//--------------------------------------------------------------------------------------------
	//ATKCMP3:ATKCMP32H Bit[6:4], Auto Touch Key Scan Channel 3 Compare Data bit 10~8.
	//--------------------------------------------------------------------------------------------
	//ATKCMP2:ATKCMP32H Bit[2:0], Auto Touch Key Scan Channel 2 Compare Data bit 10~8.
/*
******************************************************************************************************
*/
sfr   ATKCMP0   = 0xC4;         //Auto Touch Key Scan Channel 0 Compare Data bit 7~0.
/*
******************************************************************************************************
*/
sfr   ATKCMP1   = 0xC5;         //Auto Touch Key Scan Channel 1 Compare Data bit 7~0.
/*
******************************************************************************************************
*/
sfr   ATKCMP2   = 0xC6;         //Auto Touch Key Scan Channel 2 Compare Data bit 7~0.
/*
******************************************************************************************************
*/
sfr   ATKCMP3   = 0xC7;         //Auto Touch Key Scan Channel 3 Compare Data bit 7~0.
/*
******************************************************************************************************
*/
sfr 	T2CON  		= 0xC8;
	//--------------------------------------------------------------------------------------------
	sbit 		TF2  		  = T2CON^7;		//锟斤拷时锟斤拷T2锟斤拷锟斤拷卸媳锟街撅拷锟絋F2锟斤拷锟斤拷锟斤拷锟矫伙拷锟斤拷锟斤拷锟藉“0锟斤拷锟斤拷锟斤拷T2锟斤拷为锟斤拷锟节诧拷锟斤拷锟绞凤拷锟斤拷锟斤拷时锟斤拷TF2锟斤拷锟结被锟矫★拷1锟斤拷锟斤拷
	sbit 		EXF2    	= T2CON^6;		//锟解部锟叫讹拷2锟斤拷志锟斤拷EXEN2为1时锟斤拷锟斤拷T2EX锟斤拷P1.1锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷时锟斤拷1锟叫断憋拷志DXF2锟斤拷EXF2锟斤拷锟斤拷锟斤拷锟矫伙拷锟斤拷锟斤拷锟藉“0锟斤拷锟斤拷
	sbit 		RCLK    	= T2CON^5;		//锟斤拷锟叫接口的斤拷锟斤拷时锟斤拷选锟斤拷锟街撅拷锟絋CLK=1时锟斤拷T2锟斤拷锟斤拷锟斤拷mode 1 or 3锟斤拷
	sbit 		TCLK 		  = T2CON^4;		//锟斤拷锟叫接口的凤拷锟斤拷时锟斤拷选锟斤拷锟街疚伙拷锟絉CLK锟斤拷1时锟斤拷T2锟斤拷锟斤拷锟斤拷mode 1 or 3锟斤拷
	sbit 		EXEN2   	= T2CON^3;		//锟解部锟叫讹拷2锟斤拷锟斤拷锟斤拷志锟斤拷
	sbit 		TR2     	= T2CON^2;		//锟解部锟斤拷锟斤拷锟斤拷/锟斤拷时锟斤拷选锟斤拷位锟斤拷C/T2=1时锟斤拷T2为锟解部锟铰硷拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷T2锟斤拷P1.0锟斤拷锟斤拷C/T2=0时锟斤拷T2为锟斤拷时锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟绞拷锟斤拷锟狡碉拷藕锟斤拷锟轿拷锟斤拷锟斤拷藕拧锟�
	sbit 		CT2     	= T2CON^1;		//T2锟斤拷锟斤拷/锟斤拷时锟斤拷锟斤拷位锟斤拷TR1为1时锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷为0时锟斤拷止锟斤拷锟斤拷锟斤拷
	sbit 		CPRL2   	= T2CON^0;		//锟斤拷捉锟酵筹拷锟斤拷锟皆讹拷锟斤拷装锟诫方式选锟斤拷位锟斤拷为1时锟斤拷锟斤拷锟节诧拷捉锟斤拷式锟斤拷为0时T2锟斤拷锟斤拷锟节筹拷锟斤拷锟皆讹拷锟斤拷装锟诫方式锟斤拷锟斤拷TCLK锟斤拷RCLK为1时锟斤拷CP/RL2锟斤拷锟斤拷锟皆ｏ拷T2锟斤拷锟角癸拷锟斤拷锟节筹拷锟斤拷锟皆讹拷锟斤拷装锟诫方式锟斤拷
/*
******************************************************************************************************
*/
sfr 	RCP2L  	 = 0xCA;				//锟解部锟斤拷锟诫（P1.1锟斤拷锟斤拷锟斤拷锟斤拷/锟皆讹拷锟斤拷装锟斤拷模式时锟斤拷值锟侥达拷锟斤拷锟酵帮拷位
sfr 	RCP2H  	 = 0xCB;				//锟解部锟斤拷锟诫（P1.1锟斤拷锟斤拷锟斤拷锟斤拷/锟皆讹拷锟斤拷装锟斤拷模式时锟斤拷值锟侥达拷锟斤拷锟竭帮拷位
/*
******************************************************************************************************
*/
sfr 	TL2   		= 0xCC;			  	//Timer2 data low byte
sfr 	TH2   		= 0xCD;			    //Timer2 data high byte
/*
******************************************************************************************************
*/
sfr 	PSW   		= 0xD0;
	//--------------------------------------------------------------------------------------------
	sbit 		CY 		= PSW^7;		//锟斤拷位锟斤拷志,锟叫斤拷锟斤拷锟轿�,CY锟斤拷1;锟睫斤拷锟斤拷锟轿�,CY锟斤拷0
	sbit 		AC 		= PSW^6;		//锟斤拷锟轿伙拷锟街�
	sbit 		F0 		= PSW^5;		//锟矫伙拷锟斤拷锟斤拷锟斤拷锟绞癸拷锟�
	sbit 		RS1 	= PSW^4;		//锟斤拷锟斤拷锟侥达拷锟斤拷锟斤拷选锟斤拷[RS1:RS0]
	sbit 		RS0 	= PSW^3;		//00--0锟斤拷,01--1锟斤拷,10--2锟斤拷,11--3锟斤拷
	sbit 		OV 		= PSW^2;		//锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷,锟斤拷锟斤拷锟�,OV=1;锟斤拷锟斤拷锟�,OV锟斤拷0
	sbit 		F1 		= PSW^1;		//锟矫伙拷锟皆讹拷锟斤拷锟街�
	sbit 		P 		= PSW^0;		//锟斤拷锟斤拷锟斤拷示ALU锟斤拷锟斤拷锟斤拷锟叫讹拷锟斤拷锟斤拷锟斤拷位1锟侥革拷锟斤拷锟斤拷锟斤拷偶锟斤拷,锟斤拷为锟斤拷锟斤拷,锟斤拷P=1,锟斤拷锟斤拷为0
/*
******************************************************************************************************
*/
sfr		CLKCON		= 0xD8;
	sbit 		SCKTYPE = CLKCON^7;		//锟斤拷时锟斤拷锟斤拷锟斤拷选锟斤拷Slow Clock Type. 1=SXT, 0=SRC
	sbit 		FCKTYPE = CLKCON^6;		//Fast clock Type. 0=FRC, 1=FXT.
	sbit 		STPPCK 	= CLKCON^4;		//1=锟斤拷锟斤拷IDL模式锟斤拷Stop UART/Timer0/Timer1/Timer2 Clock in Idle mode
	sbit 		STPFCK 	= CLKCON^3;		//1=停止锟斤拷时锟接ｏ拷0=锟斤拷时锟接癸拷锟斤拷
	sbit 		SELFCK 	= CLKCON^2;		//1=选锟斤拷锟绞憋拷锟轿低呈憋拷锟皆达拷锟�0=锟斤拷时锟斤拷为系统时锟斤拷源
	sbit 		CLKPSC_H 	= CLKCON^1;	
	sbit 		CLKPSC_L	= CLKCON^0;	
	//--------------------------------------------------------------------------------------------
	//CLKPSC:CLKCON Bit[1:0],系统时锟斤拷预锟斤拷频锟斤拷SYSCLK Prescaler, 0:div16, 1:div4, 2:div2, 3:div1
	#define		CLKPSC_Mask							~0x03
	#define		CLKPSC_Div16		0x00
	#define		CLKPSC_Div4		0x01
	#define		CLKPSC_Div2		0x02
	#define		CLKPSC_Div1		0x03							
/*
******************************************************************************************************
*/
sfr 	ACC   		= 0xE0;		//Accumulator
/*
******************************************************************************************************
*/
sfr 	B   		= 0xF0;		//B register
/*
******************************************************************************************************
*/	
sfr 	CFGWL		= 0xF7;
	//--------------------------------------------------------------------------------------------
	//WDTE:CFGWL Bit[7:6],WDT Control
	//#define 	WDT_EN		         	0xC0		
	//#define 	WDT_ENFS_DISILDE		0x80		
	//#define 	WDT_DIS         		0x00		
	
	#define  	WDT_IS_OPEN                         CFGWL=(CFGWL&0x3f)|0xC0	//11锟斤拷WDT Always Enable
	#define   	WDT_RUN_FAST_DIS_ILDE               CFGWL=(CFGWL&0x3f)|0x80	//10: WDT Enable in Fast/Slow, Disable in Idle/Stop mode
	#define  	WDT_IS_STOP                         CFGWL=CFGWL&0x3f  		//0X: WDT Disable
	//--------------------------------------------------------------------------------------------
	//ATKD:CFGWL Bit[5],Auto Touch Key Disable
	#define 	ATKD_DIS         		0x20		//ATKD Disable
	//--------------------------------------------------------------------------------------------
	//FRCF:CFGWL Bit[4:0],FRC frequency adjustment. 0x00=central frequency, 0x0F=Highest frequency, 0x10=Lowest frequency.
/*
******************************************************************************************************
*/	
sfr 	AUX1   		= 0xF8;
	//--------------------------------------------------------------------------------------------
    sbit 		CLRWDT		= AUX1^7;
    sbit 		CLRTM3		= AUX1^6;//锟斤拷锟斤拷TM3也锟斤拷锟斤拷锟斤拷TM3
    sbit 		TKSOC		  = AUX1^5;//锟斤拷锟斤拷锟斤拷锟斤拷始锟斤拷锟斤拷锟斤拷时锟皆讹拷锟斤拷锟斤拷
    sbit 		ADSOC		  = AUX1^4;//ADC锟斤拷始锟斤拷锟斤拷锟斤拷时硬锟斤拷锟皆讹拷锟斤拷锟斤拷
    sbit 		CLRPWM0		= AUX1^3;
    sbit 		DPSEL		  = AUX1^0;//0锟斤拷选锟斤拷DPTR;1锟斤拷选锟斤拷DPTR1

/*
******************************************************************************************************
*/	
sfr 	ICECON 		= 0xF9;
	#define 	HWBRK		          0x80		//H/W Break
	#define 	RETROREQ          0x40		//Retro-OPCode Request,HW set at SWBRK,clear at NMI return
	#define 	TXRDY		          0x20		//Transmitt Ready
	#define 	CMDRDY	          0x10		//Ready for Command
	#define 	XFIRCK	          0x08		//Swich to FIRC 4MHZ
	#define 	WRFAIL	          0x01		//EEPROM Write Fail
/*
******************************************************************************************************
*/	
sfr 	RETROCODE	= 0xFA;//ICE Mode Retro-OPCode
/*
******************************************************************************************************
*/	
sfr 	ICERCD 		= 0xFB;//ICE Mode Receive Data
/*
******************************************************************************************************
*/	
sfr 	ICECMDL		= 0xFC;//ICE Mode Command Low Byte
/*
******************************************************************************************************
*/	
sfr 	ICECMDH		= 0xFD;//ICE Mode Command High Byte
/*
******************************************************************************************************
*/	
sfr 	ICETXD 		= 0xFE;//ICE Mode Transmit Data
/*
******************************************************************************************************
*/	
sfr 	INDSFR 		= 0xFF;//SFR direct Adr replaced by ICECMDL in NMI"mov dir,a"&"mov a,dir"
/*
******************************************************************************************************
*/
#define	 All_Interrupt_Enable()		do{EA = 1;}while(0)		//全锟斤拷锟叫讹拷使锟斤拷
#define	 All_Interrupt_Disable()	do{EA = 0;}while(0)		//全锟斤拷锟叫断关憋拷
/*
******************************************************************************************************
*/
#define	 PowerDown()			do{PCON = PCON | PD;}while(0)	//锟斤拷锟斤拷锟斤拷锟侥Ｊ�
#define	 PowerIdel()			do{PCON = PCON | IDL;}while(0)	//锟斤拷锟斤拷IDEL模式
/*
******************************************************************************************************
*/
#endif
/*
******************************************************************************************************
*/
